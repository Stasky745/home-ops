---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: cloud
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://nextcloud.github.io/helm/
      chart: nextcloud
      version: 3.4.3
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      flavor: fpm-alpine
    env:
      PHP_MEMORY_LIMIT: 512M
    nginx:
      enabled: true
      # https://help.nextcloud.com/t/stable-nextcloud-connect-failed-111-connection-refused-while-connecting-to-upstream-client-x-x-x-x-server-request-get-status-php-http-1-1-upstream-fastcgi-127-0-0-1-9000-host-nc-xxxx-com/77987
      #config:
      #  custom: |-
      #    upstream php-handler {
      #      server 127.0.0.1:9000;
      #      server unix:/var/run/php/php8.1-fpm.sock;
      #    }
    nextcloud:
      datadir: /var/www/data
      extraEnv:
        - name: REDIS_HOST
          value: redis-lb.database.svc.cluster.local
        - name: REDIS_HOST_PORT
          value: "6379"
      existingSecret:
        enabled: true
        secretName: nextcloud
      host: &host "cloud.${SECRET_DOMAIN}"
      mail:
        enabled: true
        fromAddress: nextcloud
        domain: ${SECRET_DOMAIN}
        smtp:
          port: 587
          authtype: LOGIN
      phpConfigs:
        uploadLimit.ini: |
          upload_max_filesize = 16G
          post_max_size = 16G
          max_input_time = 3600
          max_execution_time = 3600
      # configs:
      #   proxy.config.php: |-
      #     <?php
      #     $CONFIG = array (
      #       'overwriteprotocol' => 'https',
      #       'overwrite.cli.url' => 'https://cloud.${SECRET_DOMAIN}',
      #       'filelocking.enabled' => 'true',
      #       'loglevel' => '2',
      #       'enable_previews' => true,
      #       'trusted_domains' =>
      #         [
      #           'nextcloud',
      #           'cloud.${SECRET_DOMAIN}'
      #         ],
      #       'trusted_proxies' =>
      #         [
      #           'nginx'
      #         ],
      #       'forwarded_for_headers' =>
      #         [
      #           0 => 'X-Forwarded-For',
      #           1 => 'HTTP_X_FORWARDED_FOR',
      #         ],
      #     );
      #   gitops.config.php: |-
      #     <?php
      #     $CONFIG = array (
      #       'appstoreenabled' => true,
      #       #'appstoreurl' => 'https://apps.nextcloud.com/api/v0',
      #       'mail_domain' => '${SECRET_DOMAIN}',
      #     );
      #   # Circumvention for client freezes - https://github.com/nextcloud/desktop/issues/5094
      #   bulkupload.config.php: |-
      #     <?php
      #     $CONFIG = array (
      #       'bulkupload.enabled' => false,
      #     );
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: postgres-rw.database.svc.cluster.local:5432
      database: nextcloud
    ingress:
      enabled: true
      className: "nginx"
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: "10G"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          # Rule borrowed from .htaccess to handle Microsoft DAV clients
          location = / {
            if ( $http_user_agent ~ ^DavClnt ) {
              return 302 /remote.php/webdav/$is_args$args;
            }
          }

          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      path: /
      pathType: Prefix
      tls:
        - hosts:
            - *host
    persistence:
      enabled: true
      existingClaim: nextcloud-config
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-nfs
        accessMode: ReadWriteMany
  valuesFrom:
    - targetPath: externalDatabase.user
      kind: Secret
      name: nextcloud
      valuesKey: database-username
    - targetPath: externalDatabase.password
      kind: Secret
      name: nextcloud
      valuesKey: database-password
    - targetPath: nextcloud.mail.smtp.name
      kind: Secret
      name: nextcloud
      valuesKey: smtp-username
    - targetPath: nextcloud.mail.smtp.password
      kind: Secret
      name: nextcloud
      valuesKey: smtp-password
    - targetPath: nextcloud.mail.smtp.host
      kind: Secret
      name: nextcloud
      valuesKey: smtp-server
